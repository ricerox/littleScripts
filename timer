#!/usr/bin/env bash

#
# A simple timer which sends a notification after the specified time
# Author: pixELSflash
# License: MIT
# Repo: https://github.com/pixELSflash/littleScripts/
#

if (( $# == 0 )) || [[ "${1}" == *"-h"* ]]; then
    echo "Usage: timer <timer_goal> [description]"
    exit 1
fi

timerGoal="${1:-0}"
notifiSummary="${2:-"Timer ended"}"
notifiBody="${timerGoal} passed"

# Allow actual times (16:40) as timer times
if [[ "${timerGoal}" == *":"* ]]; then
    now="$( date +%s )"
    timerTime="$( date --date="${timerGoal}" +%s )"
    duration=$(( timerTime - now ))
else
    duration="${timerGoal}"
fi

if [[ "${duration}" == "0" ]] || [[ "${duration}" == "-"* ]]; then
    echo >&2 "Please specify a duration or a time in the future."
    exit 1
fi

# Add 's' to the end when only a number without unit is supplied
[[ "${duration}" =~ ^[0-9]+$ ]] && duration="${duration}s"

longDuration="${duration/s/ seconds}"
longDuration="${longDuration/m/ minutes}"
longDuration="${longDuration/h/ hours}"

endTime="$(
    date --iso-8601=minutes --date="${longDuration}" |
    cut -d"+" -f1
)"

echo "Started timer for ${duration} (${endTime})."

# Start sleeping in background so we're not blocking the terminal
{
    sleep "${duration}"

    # urgency=critical makes the notification persistent
    notify-send -u critical -i timer "${notifiSummary}" "${notifiBody}" 2>/dev/null

    #spdVolume="-75"
    #spd-say -w --volume "${spdVolume}" -l de-DE "Timer ended"
    #for (( i = 0; i < 5; i++)); do
    #    spd-say -w --volume "${spdVolume}" -l de-DE "a"
    #done
} &
